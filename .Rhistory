tally(name="reg_more_than_1")
map_value_more_than1 <- MAP %>%
filter(Map_value > 1) %>%
tally(name="map_value_more_than1")
cov10 <- MAP %>%
filter(Coverage > 10) %>%
tally(name="cov10")
pot_true_SNPs <- MAP %>%
filter(regular > -1 & regular < 1) %>%
filter(Coverage > 10) %>%
filter(SNP_percent < 10) %>%
tally(name="pot_true_SNP")
pot_true_minors <- MAP %>%
filter(regular > -1 & regular < 1) %>%
filter(Coverage > 10) %>%
filter(SNP_percent >= 10 & SNP_percent < 90) %>%
tally(name="pot_true_minors"
summary <- data_frame(total_nt,reg0,map_value1,reg_more_than_1,map_value_more_than1,cov10,pot_true_SNPs,pot_true_minors)
summary <- data_frame(total_nt,reg0,map_value1,reg_more_than_1,map_value_more_than1,cov10)
summary <- data_frame(total_nt,reg0,map_value1,reg_more_than_1,map_value_more_than1,cov10,pot_true_minors)
summary <- data_frame(total_nt,reg0,map_value1,reg_more_than_1,map_value_more_than1,cov10,pot_true_minors,pot_true_SNPs)
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
MAP_stats_summary(loop_file,f_name)
MAP_stats_summary(loop_file,f_name)
MAP_stats_summary(loop_file,f_name)
MAP <- read_MAP(loop_file,f_name)
#MAP_stats_summary(loop_file,f_name)
plot_MAP_histo(MAP,f_name)
View(MAP_stats_summary)
MAP_files <- list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/",full.names = T,pattern = "*.txt")
out_dir <- "~/Desktop/MAP_out_files/"
loop_file <- MAP_files[2]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
#MAP_stats_summary(loop_file,f_name)
plot_MAP_histo(MAP,f_name)
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,f_name)
MAP_stats
plot_MAP_histo(MAP,f_name)
MAP_stats <- MAP_stats_summary(MAP,f_name)
MAP_stats
plot_MAP_histo(MAP,f_name)
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
MAP_files <- list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/",full.names = T,pattern = "*.txt")
out_dir <- "~/Desktop/MAP_out_files/"
loop_file <- MAP_files[2]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
?add_column
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
plot_MAP_coverage(MAP,f_name)
View(MAP)
100%%10
101%%10
MAP %>% filter(filter(Position%%10 == 0))
MAP %>% filter(Position%%10 == 0)
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
plot_MAP_coverage(MAP,f_name)
for (i in 2:3) {
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,f_name)
plot_MAP_coverage(MAP,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
for (i in 2) {
loop_file <- MAP_files[2]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,f_name)
plot_MAP_coverage(MAP,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
for (i in 2:3){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,f_name)
plot_MAP_coverage(MAP,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
#for (i in 2:3){
loop_file <- MAP_files[3]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,f_name)
plot_MAP_coverage(MAP,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
#}
for (i in 4:6){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,f_name)
plot_MAP_coverage(MAP,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
#}
for (i in 4:6){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,f_name)
plot_MAP_coverage(MAP,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
for (i in 1:3){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,out_dir,f_name)
plot_MAP_coverage(MAP,out_dir,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
for (i in 1:3){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,out_dir,f_name)
plot_MAP_coverage(MAP,out_dir,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
?ggsave
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
for (i in 1:3){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,out_dir,f_name)
plot_MAP_coverage(MAP,out_dir,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
for (i in 1:3){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,out_dir,f_name)
plot_MAP_coverage(MAP,out_dir,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
source('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
for (i in 1:3){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
MAP_stats
plot_MAP_histo(MAP,out_dir,f_name)
plot_MAP_coverage(MAP,out_dir,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
seq_along(MAP_files)
for (i in seq_along(MAP_files)){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
plot_MAP_histo(MAP,out_dir,f_name)
plot_MAP_coverage(MAP,out_dir,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
loop_file
f_name
MAP <- read_MAP(loop_file,f_name)
MAP_files
loop_file
f_name
View(MAP)
i
loop_file <- MAP_files[i]
loop_file
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
f_name
MAP <- read_MAP(loop_file,f_name)
debugSource('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
MAP <- read_MAP(loop_file,f_name)
debugSource('~/GitHub/Ct_MAP_analysis/MAP_functions.R')
MAP <- read_MAP(loop_file,f_name)
read.table(loop_file, row.names = NULL, sep = "\t")
loop_file
?list.files
MAP_files <- list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/",full.names = T,pattern = "*.txt", min_size = 1000000)
file.info(MAP_files)
MAP_files <- file.info(list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/",full.names = T,pattern = "*.txt"))
MAP_files$size > 1000000
MAP_file_info <- file.info(list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/",full.names = T,pattern = "*.txt"))
MAP_files <- list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/",full.names = T,pattern = "*.txt")[MAP_file_info$size > 1000000]
out_dir <- "~/Desktop/MAP_out_files/"
MAP_file_info <- file.info(list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/",full.names = T,pattern = "*.txt"))
str(MAP_file_info)
MAP_files <- list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/",full.names = T,pattern = "*.txt")
MAP_files[MAP_file_info$size > 1000000]
MAP_file_info <- file.info(list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/",full.names = T,pattern = "*.txt"))
MAP_files <- list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/",full.names = T,pattern = "*.txt")
MAP_files <- MAP_files[MAP_file_info$size > 1000000]
out_dir <- "~/Desktop/MAP_out_files/"
for (i in seq_along(MAP_files)){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
plot_MAP_histo(MAP,out_dir,f_name)
plot_MAP_coverage(MAP,out_dir,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
i
loop_file
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,6}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
f_name
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,8}_MAP.txt", loop_file))))
f_name
for (i in seq_along(MAP_files)){
loop_file <- MAP_files[i]
f_name <- sub("_MAP.txt","",sub("//","",regmatches(loop_file, regexpr("//.{3,10}_MAP.txt", loop_file))))
MAP <- read_MAP(loop_file,f_name)
MAP_stats <- MAP_stats_summary(MAP,out_dir,f_name)
plot_MAP_histo(MAP,out_dir,f_name)
plot_MAP_coverage(MAP,out_dir,f_name)
write_potential_minors(MAP,out_dir,f_name)
write_potential_SNPs(MAP,out_dir,f_name)
}
MAP_summaries <- list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/MAP_out_files/",full.names = T,pattern = "*.txt")
MAP_summaries
MAP_summaries <- list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/MAP_out_files/",full.names = T,pattern = "*_stats.tsv")
MAP_summaries
MAP_summary_df <- read.tsv(MAP_summaries[1])
MAP_summary_df <- read_tsv(MAP_summaries[1])
MAP_summary_df
temp_df <- read_tsv(MAP_summaries[2])
?row_bind
?bind_rows
temp_df <- read_tsv(MAP_summaries[2])
MAP_summary_df <- bind_rows(MAP_summary_df,temp_df)
MAP_summary_df
length(MAP_summaries)
MAP_summary_df <- read_tsv(MAP_summaries[1])
for (j in 2:length(MAP_summaries)) {
temp_df <- read_tsv(MAP_summaries[j])
MAP_summary_df <- bind_rows(MAP_summary_df,temp_df)
}
MAP_summary_df
MAP_summary_df <- read_tsv(MAP_summaries[1])
MAP_summary_df <- read_tsv(MAP_summaries[1])
for (j in 2:length(MAP_summaries)) {
temp_df <- read_tsv(MAP_summaries[j])
MAP_summary_df <- bind_rows(MAP_summary_df,temp_df)
}
write_tsv(MAP_summary_df,here("MAP_analysis_summary.tsv"))
view(MAP_summary_df)
MAP_minor_allele_files <- list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/MAP_out_files/",full.names = T,pattern = "*_minors.tsv")
MAP_minor_allele_files
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1])
for (j in 2:length(MAP_minor_allele_files)) {
temp_df2 <- read_tsv(MAP_minor_allele_files[j])
MAP_minor_allele_df <- bind_rows(MAP_summary_df,temp_df2)
}
write_tsv(MAP_minor_allele_df,here("MAP_minor_alleles_df.tsv"))
rm(S26C_MAP)
view(MAP_minor_allele_df)
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1])
for (j in 2:length(MAP_minor_allele_files)) {
temp_df2 <- read_tsv(MAP_minor_allele_files[j])
MAP_minor_allele_df <- bind_rows(MAP_minor_allele_df,temp_df2)
}
rm(MAP_minor_allele_df)
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1])
for (j in 2:length(MAP_minor_allele_files)) {
temp_df2 <- read_tsv(MAP_minor_allele_files[j])
MAP_minor_allele_df <- bind_rows(MAP_minor_allele_df,temp_df2)
}
rm(MAP_minor_allele_df)
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1])
MAP_minor_allele_df
temp_df2 <- read_tsv(MAP_minor_allele_files[2])
view(temp_df2)
MAP_minor_allele_df <- bind_rows(MAP_minor_allele_df,temp_df2)
?read_tsv
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1])
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1],cols(
strain = col_character(),
Position = col_character(),
Refnt = col_character(),
Coverage = col_character(),
Ref_cov = col_character(),
Aa = col_character(),
Gg = col_character(),
Cc = col_character(),
Tt = col_character()
))
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1],col_types=(cols(
strain = col_character(),
Position = col_character(),
Refnt = col_character(),
Coverage = col_character(),
Ref_cov = col_character(),
Aa = col_character(),
Gg = col_character(),
Cc = col_character(),
Tt = col_character())
))
for (j in 2:length(MAP_minor_allele_files)) {
temp_df2 <- read_tsv(MAP_minor_allele_files[j])
MAP_minor_allele_df <- bind_rows(MAP_minor_allele_df,temp_df2)
}
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1],col_types=(cols(
strain = col_character(),
Position = col_integer(),
Refnt = col_character(),
Coverage = col_integer(),
Ref_cov = col_integer(),
Aa = col_integer(),
Gg = col_integer(),
Cc = col_integer(),
Tt = col_integer())
))
for (j in 2:length(MAP_minor_allele_files)) {
temp_df2 <- read_tsv(MAP_minor_allele_files[j])
MAP_minor_allele_df <- bind_rows(MAP_minor_allele_df,temp_df2)
}
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1],col_types=(cols(
strain = col_character(),
Position = col_integer(),
Refnt = col_character(),
Coverage = col_integer(),
Ref_cov = col_integer(),
Aa = col_integer(),
Gg = col_integer(),
Cc = col_integer(),
Tt = col_integer())
))
for (j in 2:length(MAP_minor_allele_files)) {
temp_df2 <- read_tsv(MAP_minor_allele_files[j])
MAP_minor_allele_df <- bind_rows(MAP_minor_allele_df,temp_df2)
}
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1],col_types=(cols(
strain = col_character(),
Position = col_integer(),
Refnt = col_character(),
Coverage = col_integer(),
Ref_cov = col_integer(),
Aa = col_integer(),
Gg = col_integer(),
Cc = col_integer(),
Tt = col_integer())
))
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1],col_types=(cols(
strain = col_character(),
Position = col_integer(),
Refnt = col_character(),
Coverage = col_integer(),
Ref_cov = col_integer(),
Aa = col_integer(),
Gg = col_integer(),
Cc = col_integer(),
Tt = col_integer())
))
for (j in 2:length(MAP_minor_allele_files)) {
temp_df2 <- read_tsv(MAP_minor_allele_files[j],col_types=(cols(
strain = col_character(),
Position = col_integer(),
Refnt = col_character(),
Coverage = col_integer(),
Ref_cov = col_integer(),
Aa = col_integer(),
Gg = col_integer(),
Cc = col_integer(),
Tt = col_integer())
))
MAP_minor_allele_df <- bind_rows(MAP_minor_allele_df,temp_df2)
}
write_tsv(MAP_minor_allele_df,here("MAP_minor_alleles_df.tsv"))
MAP_minor_allele_files <- list.files("~/Box/TIMOTHY_READ/DATA/2020-Chlamydia_Agilent_project/MAP_ASR/MAP_out_files/",full.names = T,pattern = "*_minors.tsv")
MAP_minor_allele_df <- read_tsv(MAP_minor_allele_files[1],col_types=(cols(
strain = col_character(),
Position = col_integer(),
Refnt = col_character(),
Coverage = col_integer(),
Ref_cov = col_integer(),
Aa = col_integer(),
Gg = col_integer(),
Cc = col_integer(),
Tt = col_integer())
))
for (j in 2:length(MAP_minor_allele_files)) {
temp_df2 <- read_tsv(MAP_minor_allele_files[j],col_types=(cols(
strain = col_character(),
Position = col_integer(),
Refnt = col_character(),
Coverage = col_integer(),
Ref_cov = col_integer(),
Aa = col_integer(),
Gg = col_integer(),
Cc = col_integer(),
Tt = col_integer())
))
MAP_minor_allele_df <- bind_rows(MAP_minor_allele_df,temp_df2)
}
write_tsv(MAP_minor_allele_df,here("MAP_minor_alleles_df.tsv"))
view(MAP_minor_allele_df)
?case_when
minor_mutation_summary <- MAP_minor_allele_df %>%
mutate(Altnt = case_when(
Aa > Gg | Aa > Cc | Aa > Tt ~ "A",
Gg > Aa | Gg > Cc | Gg > Tt ~ "G",
Cc > Aa | Cc > Gg | Cc > Tt ~ "C",
Tt > Aa | Tt > Gg | Tt > Cc ~ "T",
TRUE ~ NA
))
minor_mutation_summary <- MAP_minor_allele_df %>%
mutate(Altnt is case_when(
minor_mutation_summary <- MAP_minor_allele_df %>%
mutate(Altnt = case_when(
Aa > Gg | Aa > Cc | Aa > Tt ~ "A",
Gg > Aa | Gg > Cc | Gg > Tt ~ "G",
Cc > Aa | Cc > Gg | Cc > Tt ~ "C",
Tt > Aa | Tt > Gg | Tt > Cc ~ "T",
TRUE ~ NA
))
MAP_minor_allele_df %>%
group_by(Position) %>%
tally
Posiiotn_count > MAP_minor_allele_df %>%
group_by(Position) %>%
tally
Posiiotn_count <- MAP_minor_allele_df %>%
group_by(Position) %>%
tally
rm(cov10)
rm(map_value1)
rm(map_value_more_than1)
rm(reg0)
view(Posiiotn_count)
Posiiotn_count <- MAP_minor_allele_df %>%
group_by(Position) %>%
tally
ggplot(Posiiotn_count,aes(n)) +
geom_histogram(binwidth=1) +
ggtitle("No of strians with minor allele") +
theme_bw()
view(MAP_summary_df)
MAP_summary_df %>%
filter(cov10 > 1030000)
MAP_summary_df %>%
filter(cov10 > 1030000) %>%
ggplot(aes(pot_true_minors)) %>%
geom_histogram(binwidth=100) +
ggtitle("No of strains with potential true minor alleles") +
theme_bw()
MAP_summary_df %>%
filter(cov10 > 1030000) %>%
ggplot(aes(pot_true_minors)) +
geom_histogram(binwidth=100) +
ggtitle("No of strains with potential true minor alleles") +
theme_bw()
MAP_summary_df %>%
filter(cov10 > 1030000) %>%
filter(pot_true_minors > 200)
