{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"MAP_minor_allele_df %>% mutate(Altnt = case_when(Aa > Gg | Aa > \n    Cc | Aa > Tt ~ \"A\", Gg > Aa | Gg > Cc | Gg > Tt ~ \"G\", Cc > \n    Aa | Cc > Gg | Cc > Tt ~ \"C\", Tt > Aa | Tt > Gg | Tt > Cc ~ \n    \"T\", TRUE ~ NA))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`_fseq`(`_lhs`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"freduce(value, `_function_list`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(function_list[[k]](value))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"function_list[[k]](value)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mutate(., Altnt = case_when(Aa > Gg | Aa > Cc | Aa > Tt ~ \"A\", \n    Gg > Aa | Gg > Cc | Gg > Tt ~ \"G\", Cc > Aa | Cc > Gg | Cc > \n        Tt ~ \"C\", Tt > Aa | Tt > Gg | Tt > Cc ~ \"T\", TRUE ~ NA))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mutate.data.frame(., Altnt = case_when(Aa > Gg | Aa > Cc | Aa > \n    Tt ~ \"A\", Gg > Aa | Gg > Cc | Gg > Tt ~ \"G\", Cc > Aa | Cc > \n    Gg | Cc > Tt ~ \"C\", Tt > Aa | Tt > Gg | Tt > Cc ~ \"T\", TRUE ~ \n    NA))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mutate_cols(.data, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withCallingHandlers({\n    for (i in seq_along(dots)) {\n        not_named <- (is.null(dots_names) || dots_names[i] == \n            \"\") ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mask$eval_all_mutate(dots[[i]])","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"case_when(Aa > Gg | Aa > Cc | Aa > Tt ~ \"A\", Gg > Aa | Gg > Cc | \n    Gg > Tt ~ \"G\", Cc > Aa | Cc > Gg | Cc > Tt ~ \"C\", Tt > Aa | \n    Tt > Gg | Tt > Cc ~ \"T\", TRUE ~ NA)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"replace_with(out, query[[i]] & !replaced, value[[i]], NULL)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"check_type(val, x, name)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"glubort(header, \"must be {friendly_type_of(template)}, not {friendly_type_of(x)}.\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".abort(text)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"signal_abort(cnd)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"signalCondition(cnd)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"(function (e) \n{\n    if (inherits(e, \"rlang_error_data_pronoun_not_found\")) {\n        stop_error_data_pronoun_not_found(conditionMessage(e),  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop_dplyr(i, dots, fn = \"mutate\", problem = conditionMessage(e), \n    parent = e)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".signal(bullets, class = \"dplyr_error\", error_name = error_name, \n    error_expression = error_expression, index = .index, dots = dots, \n    fn = fn, parent = parent)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"signal_abort(cnd)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(fallback)","line_number":0}],"message":"Error: Problem with `mutate()` input `Altnt`.\n[31mx[39m must be a character vector, not a logical vector.\n[34mâ„¹[39m Input `Altnt` is `case_when(...)`.\n"}